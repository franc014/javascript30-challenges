---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Flex Panel Gallery">
    <form class="search-form">
        <input type="text" class="search" placeholder="City or State">
        <ul class="suggestions">
            <li class="suggestion">Filter for a city</li>
            <li class="suggestion">or a state</li>
        </ul>
    </form>
</Layout>


<style>
    html {
        box-sizing: border-box;
        background: #ffc600;
        font-family: 'helvetica neue';
        font-size: 20px;
        font-weight: 200;
    }

    *,
    *:before,
    *:after {
        box-sizing: inherit;
    }

    input {
        width: 100%;
        padding: 20px;
    }

    .search-form {
        max-width: 400px;
        margin: 50px auto;
    }

    input.search {
        margin: 0;
        text-align: center;
        outline: 0;
        border: 10px solid #F7F7F7;
        width: 120%;
        left: -10%;
        position: relative;
        top: 10px;
        z-index: 2;
        border-radius: 5px;
        font-size: 40px;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.12), inset 0 0 2px rgba(0, 0, 0, 0.19);
    }

    .suggestions {
        margin: 0;
        padding: 0;
        position: relative;
        /*perspective: 20px;*/
    }

    .suggestion {
        background: white;
        list-style: none;
        border-bottom: 1px solid #D8D8D8;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.14);
        margin: 0;
        padding: 20px;
        transition: background 0.2s;
        display: flex;
        justify-content: space-between;
        text-transform: capitalize;
    }

    .suggestions li:nth-child(even) {
        transform: perspective(100px) rotateX(3deg) translateY(2px) scale(1.001);
        background: linear-gradient(to bottom, #ffffff 0%, #EFEFEF 100%);
    }

    .suggestions li:nth-child(odd) {
        transform: perspective(100px) rotateX(-3deg) translateY(3px);
        background: linear-gradient(to top, #ffffff 0%, #EFEFEF 100%);
    }

    span.population {
        font-size: 15px;
    }

    .hl {
        background: #ffc600;
    }
</style>

<script>
    const endpoint = 'https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json';

    const searchBox = document.querySelector('.search-form input.search');
    let resultList = document.querySelector('ul.suggestions');
    let cities = [];

    async function loadCities() {
        const data = await fetch(endpoint);
        cities = await data.json();
    }

    document.addEventListener('DOMContentLoaded', loadCities);

    function getFormattedItem(place, searchValue) {
        let listItem = document.createElement('li');
        listItem.classList.add('suggestion');
        const listItemContent = `
            <span class='name'>${place.city}, ${place.state}</span>
            <span class="population">${place.population}</span>
            `;
        listItem.insertAdjacentHTML('afterbegin', listItemContent);
        return listItem;
    }

    async function search() {
        resultList.innerHTML = "";
        const searchValue = this.value.toUpperCase();
        const foundCities = cities.filter(cityItem => {
            return cityItem.city.toUpperCase().includes(searchValue)
                || cityItem.state.toUpperCase().includes(searchValue)
        });
        //const resultItems
        ///resultList.appendElementChild()

        foundCities.forEach(city => {
            const listItem = getFormattedItem(city, searchValue);
            resultList.insertAdjacentElement('beforeend', listItem);
        });

    }

    searchBox.addEventListener('input', search);

</script>