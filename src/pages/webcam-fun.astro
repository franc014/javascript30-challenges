---
import Layout from "../layouts/Layout.astro";
import snapSound from "../sounds/snap.mp3";
---

<Layout title="Webcam fun">
    <main>
        <div class="photobooth">
            <div class="controls">
                <button class="take-photo">Take Photo</button>
                <div class="rgb">
                    <label for="rmin">Red Min:</label>
                    <input type="range" min="0" max="255" name="rmin" />
                    <label for="rmax">Red Max:</label>
                    <input type="range" min="0" max="255" name="rmax" />
                    <br />
                    <label for="gmin">Green Min:</label>
                    <input type="range" min="0" max="255" name="gmin" />
                    <label for="gmax">Green Max:</label>
                    <input type="range" min="0" max="255" name="gmax" />
                    <br />
                    <label for="bmin">Blue Min:</label>
                    <input type="range" min="0" max="255" name="bmin" />
                    <label for="bmax">Blue Max:</label>
                    <input type="range" min="0" max="255" name="bmax" />
                </div>
            </div>

            <canvas class="photo"></canvas>
            <video class="player"></video>
            <div class="strip"></div>
        </div>

        <audio class="snap" src={snapSound} hidden></audio>
    </main>
</Layout>
<style>
    html {
        box-sizing: border-box;
    }

    *,
    *:before,
    *:after {
        box-sizing: inherit;
    }

    html {
        font-size: 10px;
        background: #ffc600;
    }

    .photobooth {
        background: white;
        max-width: 150rem;
        margin: 2rem auto;
        border-radius: 2px;
    }

    /*clearfix*/
    .photobooth:after {
        content: "";
        display: block;
        clear: both;
    }

    .photo {
        width: 100%;
        float: left;
    }

    .player {
        position: absolute;
        top: 20px;
        right: 20px;
        width: 200px;
    }

    /*
  Strip!
*/

    .strip {
        padding: 2rem;
    }

    .strip img {
        width: 100px;
        overflow-x: scroll;
        padding: 0.8rem 0.8rem 2.5rem 0.8rem;
        box-shadow: 0 0 3px rgba(0, 0, 0, 0.2);
        background: white;
    }

    .strip a:nth-child(5n + 1) img {
        transform: rotate(10deg);
    }

    .strip a:nth-child(5n + 2) img {
        transform: rotate(-2deg);
    }

    .strip a:nth-child(5n + 3) img {
        transform: rotate(8deg);
    }

    .strip a:nth-child(5n + 4) img {
        transform: rotate(-11deg);
    }

    .strip a:nth-child(5n + 5) img {
        transform: rotate(12deg);
    }
</style>

<script>
    const video = document.querySelector(".player");
    const canvas = document.querySelector(".photo");
    const ctx = canvas.getContext("2d");
    const strip = document.querySelector(".strip");
    const snap = document.querySelector(".snap");
    const takePhotoBtn = document.querySelector(".take-photo");

    function getVideo() {
        navigator.mediaDevices
            .getUserMedia({ video: true, audio: false })
            .then((localMediaStream) => {
                video.srcObject = localMediaStream;

                video.play();
            })
            .catch((err) =>
                console.error(`You didn't allow the webcam!!!`, err)
            );
    }

    function paintToCanvas() {
        const width = video.videoWidth;
        const height = video.videoHeight;

        canvas.width = width;
        canvas.height = height;

        console.log({ canvas });

        //return the interval in case we need it to manipulate it later
        return setInterval(() => {
            ctx.drawImage(video, 0, 0, width, height);
            // take the pixels out
            let pixels = ctx.getImageData(0, 0, width, height);
            // mess with them
            pixels = greenScreen(pixels);
            ctx.globalAlpha = 0.8;
            //rgbSplit(pixels); //redEffect(pixels);

            // put them back
            ctx.putImageData(pixels, 0, 0);
        }, 16);
    }

    function redEffect(pixels) {
        for (let i = 0; i < pixels.data.length; i += 4) {
            pixels.data[i + 0] = pixels.data[i + 0] + 20; // RED
            pixels.data[i + 1] = pixels.data[i + 1] - 20; // GREEN
            pixels.data[i + 2] = pixels.data[i + 2] * 0.5; // Blue
        }
        return pixels;
    }

    function rgbSplit(pixels) {
        for (let i = 0; i < pixels.data.length; i += 4) {
            pixels.data[i - 150] = pixels.data[i + 0]; // RED
            pixels.data[i + 500] = pixels.data[i + 1]; // GREEN
            pixels.data[i - 550] = pixels.data[i + 2]; // Blue
        }
        return pixels;
    }

    function greenScreen(pixels) {
        const levels = {};

        document.querySelectorAll(".rgb input").forEach((input) => {
            levels[input.name] = input.value;
        });

        console.log(levels);

        for (let i = 0; i < pixels.data.length; i = i + 4) {
            let red = pixels.data[i + 0];
            let green = pixels.data[i + 1];
            let blue = pixels.data[i + 2];
            let alpha = pixels.data[i + 3];

            if (
                red >= levels.rmin &&
                green >= levels.gmin &&
                blue >= levels.bmin &&
                red <= levels.rmax &&
                green <= levels.gmax &&
                blue <= levels.bmax
            ) {
                // take it out!
                pixels.data[i + 3] = 0;
            }
        }

        return pixels;
    }

    function takePhoto() {
        snap.currentTime = 0;
        snap.play();
        const data = canvas.toDataURL("image/jpeg");
        const link = document.createElement("a");
        link.href = data;
        link.setAttribute("donwload", "handsome");
        link.innerHTML = `<img src="${data}" alt="Handsome Man" />`;
        strip.insertBefore(link, strip.firstChild);
    }

    getVideo();

    video.addEventListener("canplay", paintToCanvas);
    takePhotoBtn.addEventListener("click", takePhoto);
</script>
